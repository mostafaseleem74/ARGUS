name: Build and deploy Python app to Azure Web App - app-ocrsolution

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Package the application files including output.tar.gz
      - name: Package build files
        run: |
          mkdir build
          cp -r * build/  # Copy all files from the current directory to the build directory
          # Ensure output.tar.gz is included in the build directory
          cp output.tar.gz build/

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: build/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'argus'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Deploy build files to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'app-ocrsolution'
          slot-name: 'argus'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_44D3935A843D4F808CAE9DCA01EF6EC7 }}

      - name: Extract output.tar.gz on Azure App Service
        run: |
          # SSH into Azure App Service and extract the build file
          az webapp ssh --name app-ocrsolution --resource-group az-euw-rg-ocrsolution-d --command "cd /home/site/wwwroot && tar -xzvf /home/site/wwwroot/output.tar.gz"
